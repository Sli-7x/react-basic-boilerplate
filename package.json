{
  "name": "vividly-ui",
  "version": "0.0.2",
  "description": "ui components",
  "main": "src/index.ts",
  "module": "dist/main.js",
  "scripts": {
    "start": "cross-env NODE_ENV=development webpack-dev-server --hot --history-api-fallback --open",
    "build": "cross-env NODE_ENV=production webpack",
    "test": "cross-env NODE_ENV=test jest",
    "test:watch": "cross-env NODE_ENV=test jest --watchAll",
    "test:coverage": "cross-env NODE_ENV=test jest --env=jsdom --no-cache --coverage",
    "lint": "tslint --project '.'"
  },
  "keywords": [
    "ui"
  ],
  "author": "gv",
  "license": "MIT",
  "dependencies": {
    "enzyme": "^3.3.0",
    "enzyme-adapter-react-16": "^1.1.1",
    "react": "^16.4.1",
    "react-custom-scrollbars": "^4.2.1",
    "react-dom": "^16.4.1",
    "react-modal": "^3.4.5",
    "react-test-renderer": "^16.4.1",
    "styled-components": "^3.3.3"
  },
  "devDependencies": {
    "@types/enzyme": "^3.1.11",
    "@types/jest": "^23.1.1",
    "@types/react": "^16.4.1",
    "@types/react-custom-scrollbars": "^4.0.3",
    "@types/react-dom": "^16.0.6",
    "@types/react-modal": "^3.1.2",
    "@types/react-test-renderer": "^16.0.1",
    "awesome-typescript-loader": "^5.2.0",
    "cross-env": "^5.2.0",
    "html-webpack-plugin": "^3.2.0",
    "husky": "^1.0.0-rc.9",
    "jest": "^23.1.0",
    "jest-styled-components": "^5.0.1",
    "ts-jest": "^22.4.6",
    "ts-node": "^7.0.0",
    "tslint": "^5.10.0",
    "tslint-config-airbnb": "^5.9.2",
    "tslint-react": "^3.6.0",
    "typescript": "^2.9.2",
    "uglifyjs-webpack-plugin": "^1.2.6",
    "webpack": "^4.12.1",
    "webpack-cli": "^3.0.8",
    "webpack-dev-server": "^3.1.4"
  },
  "husky": {
    "hooks": {
      "pre-commit": "tslint --project '.'",
      "pre-push": "npm test"
    }
  },
  "jest": {
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js"
    ],
    "transform": {
      "^.+\\.(ts|tsx)$": "ts-jest"
    },
    "testMatch": [
      "**/test/*.spec.(ts|tsx|js)"
    ],
    "setupFiles": [
      "<rootDir>config/jest/bootstrap.js"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "src/**/*.tsx",
      "!src/App.tsx",
      "!**/node_modules/**",
      "!**/dist/**"
    ],
    "collectCoverage": true,
    "bail": true,
    "moduleNameMapper": {
      "^.+\\.s?css$": "identity-obj-proxy"
    },
    "coverageDirectory": "./coverage/"
  }
}
